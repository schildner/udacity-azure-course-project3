name: Azure Pipelines
variables:
  # Azure Resource Manager service connection for pipelines
  azureServiceConnectionId: '02cc2bd2-9ade-452a-94a7-4052dfd43b29'

  # Python version: 3.7.6
  python.version: '3.7.6'

  # Agent VM image name
  vmImageName: 'myPackerImage'

  # Web app name
  webAppName: 'udacity-azure-course-project3-test-app-AppService'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Environment name
  environmentName: 'test'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-20.04
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDa8okYFnpl84XcFtz9/4zBoIN8KHJzJW4hZGer+SbYgOwBqPU+lW0NXaFfrqtnpPWqp6+76X1vvTrLPDr6HyEiuOPAYb9yq+rdxTlWtYC2UuItQu3qvTWAuaW0FxYcd6Va7F6y9AnBSb9ucbTA00a0C1y50S1uanFCSXIPyq84EBOyWeMJRZZUQS81ERxmbyi3c5bz5egTdOBgyQ03GoXXGteRK0t9r4vm5aoU1J+hfhU+QVrgYZfnOHDKVYeTUeMuqcPgUV7yMXKsA6lH7/9iSWMD8LZFYwscdNVj9UgLh5vcN1NquPa7TEd8zuKMMXcWr42SAU+0bSnvMHVD0/+Po+d9KPl/SVgcv4uAcHwSXKNIIiB78bYBsCV2o/dKfmvPk8jGsVGbRcRZ68USBY2LkaIvN4MG4rXG3lerMfqVL+SIJv0wJ8nyoSrZTQDk6BlUfxolO4QumOD9+t+S4ugj0sotL1bIdSe2hh4M6MjHqttNIwxPlGFwsJZsDaI+zL8= edu@Eduards-MBP.fritz.box'
        sshKeySecureFile: 'id_rsa'

    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'starter-files/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi

- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: ubuntu-20.04
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
                  #  - task: Bash@3
                  #    inputs:
                  #      targetType: 'inline'
                  #      script: |
                  #        pwd
                  #        ls -lah
                  #        cd terraform/environment/test
                  #        terraform init
                  #        terraform apply

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: 'anja-subscription-service-connection'
              appName: $(webAppName)
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip

#  - deployment: VMDeploy
#    displayName: 'Deploy VM'
#    environment:
#      name:  'TEST'
#      resourceType: VirtualMachine
#      tags: TAG1
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#
#          - task: Bash@3
#            inputs:
#              targetType: 'inline'
#              script: |
#                #! /bin/bash
#              
#                sudo apt-get upgrade -y
#                sudo apt-get install python3-pip -y
#                sudo apt-get install unzip -y
#                sudo apt-get install -y chromium-browser
#                pip3 install selenium
#                export PATH=$PATH:some/path
